# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: jeonghui
  CODE_DEPLOY_APP_NAME: jeonghui
  CODE_DEPLOY_GROUP_NAME: code-deploy-group

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Add permission
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
    # 2. application.properties를 프로젝트에 포함
    - name: add Application.properties
      run:
        touch ./src/main/resources/application.properties
      shell: bash
      
    - name: copy Application.properties
      run:
        echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
      shell: bash
      

	# 5. 빌드 결과 파일(ROOT.war) 이동
    - name: move build files
      run: mv ./build/libs/ROOT.war ./
      shell: bash

	# 6. 빌드 결과와 appspec.yml, 관련 빌드 스크립트 .zip으로 압축
    - name: zip build files
      run: zip -r $GITHUB_SHA.zip ./appspec.yml ./ROOT.war ./scripts

	# 7. AWS 인증과정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        

    # 압축한 프로젝트를 S3로 전송합니다.
    - name: Upload to S3
      run: aws s3 cp --region us-east-1 ./demo.zip s3://$S3_BUCKET_NAME/demo.zip
      
      
    # 9. CodeDeploy 실행
    - name: deploy
      run: |
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
